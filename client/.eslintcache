[{"C:\\Users\\Dimon\\Documents\\GitHub\\React-Node.js_online-shop\\client\\src\\index.js":"1","C:\\Users\\Dimon\\Documents\\GitHub\\React-Node.js_online-shop\\client\\src\\App.js":"2","C:\\Users\\Dimon\\Documents\\GitHub\\React-Node.js_online-shop\\client\\src\\store\\DeviceStore.js":"3","C:\\Users\\Dimon\\Documents\\GitHub\\React-Node.js_online-shop\\client\\src\\store\\UserStore.js":"4","C:\\Users\\Dimon\\Documents\\GitHub\\React-Node.js_online-shop\\client\\src\\components\\AppRouter.js":"5","C:\\Users\\Dimon\\Documents\\GitHub\\React-Node.js_online-shop\\client\\src\\components\\NavBar.js":"6","C:\\Users\\Dimon\\Documents\\GitHub\\React-Node.js_online-shop\\client\\src\\http\\userAPI.js":"7","C:\\Users\\Dimon\\Documents\\GitHub\\React-Node.js_online-shop\\client\\src\\routes.js":"8","C:\\Users\\Dimon\\Documents\\GitHub\\React-Node.js_online-shop\\client\\src\\http\\index.js":"9","C:\\Users\\Dimon\\Documents\\GitHub\\React-Node.js_online-shop\\client\\src\\utils\\consts.js":"10","C:\\Users\\Dimon\\Documents\\GitHub\\React-Node.js_online-shop\\client\\src\\pages\\DevicePage.js":"11","C:\\Users\\Dimon\\Documents\\GitHub\\React-Node.js_online-shop\\client\\src\\pages\\Auth.js":"12","C:\\Users\\Dimon\\Documents\\GitHub\\React-Node.js_online-shop\\client\\src\\pages\\Shop.js":"13","C:\\Users\\Dimon\\Documents\\GitHub\\React-Node.js_online-shop\\client\\src\\pages\\Basket.js":"14","C:\\Users\\Dimon\\Documents\\GitHub\\React-Node.js_online-shop\\client\\src\\pages\\Admin.js":"15","C:\\Users\\Dimon\\Documents\\GitHub\\React-Node.js_online-shop\\client\\src\\components\\Pages.js":"16","C:\\Users\\Dimon\\Documents\\GitHub\\React-Node.js_online-shop\\client\\src\\http\\deviceAPI.js":"17","C:\\Users\\Dimon\\Documents\\GitHub\\React-Node.js_online-shop\\client\\src\\components\\DeviceList.js":"18","C:\\Users\\Dimon\\Documents\\GitHub\\React-Node.js_online-shop\\client\\src\\components\\BrandBar.js":"19","C:\\Users\\Dimon\\Documents\\GitHub\\React-Node.js_online-shop\\client\\src\\components\\TypeBar.js":"20","C:\\Users\\Dimon\\Documents\\GitHub\\React-Node.js_online-shop\\client\\src\\components\\modals\\CreateType.js":"21","C:\\Users\\Dimon\\Documents\\GitHub\\React-Node.js_online-shop\\client\\src\\components\\modals\\CreateDevice.js":"22","C:\\Users\\Dimon\\Documents\\GitHub\\React-Node.js_online-shop\\client\\src\\components\\modals\\CreateBrand.js":"23","C:\\Users\\Dimon\\Documents\\GitHub\\React-Node.js_online-shop\\client\\src\\components\\DeviceItem.js":"24"},{"size":439,"mtime":1611985807000,"results":"25","hashOfConfig":"26"},{"size":860,"mtime":1611985807000,"results":"27","hashOfConfig":"26"},{"size":1298,"mtime":1611985807000,"results":"28","hashOfConfig":"26"},{"size":401,"mtime":1611985807000,"results":"29","hashOfConfig":"26"},{"size":795,"mtime":1611985807000,"results":"30","hashOfConfig":"26"},{"size":1846,"mtime":1611985807000,"results":"31","hashOfConfig":"26"},{"size":695,"mtime":1611985807000,"results":"32","hashOfConfig":"26"},{"size":774,"mtime":1611985807000,"results":"33","hashOfConfig":"26"},{"size":407,"mtime":1611985807000,"results":"34","hashOfConfig":"26"},{"size":228,"mtime":1611985807000,"results":"35","hashOfConfig":"26"},{"size":2229,"mtime":1611985807000,"results":"36","hashOfConfig":"26"},{"size":3142,"mtime":1611985807000,"results":"37","hashOfConfig":"26"},{"size":1533,"mtime":1643908389378,"results":"38","hashOfConfig":"26"},{"size":146,"mtime":1611985807000,"results":"39","hashOfConfig":"26"},{"size":1549,"mtime":1611985807000,"results":"40","hashOfConfig":"26"},{"size":801,"mtime":1611985807000,"results":"41","hashOfConfig":"26"},{"size":998,"mtime":1643907601792,"results":"42","hashOfConfig":"26"},{"size":491,"mtime":1611985807000,"results":"43","hashOfConfig":"26"},{"size":759,"mtime":1611985807000,"results":"44","hashOfConfig":"26"},{"size":755,"mtime":1643907588574,"results":"45","hashOfConfig":"26"},{"size":1355,"mtime":1611985807000,"results":"46","hashOfConfig":"26"},{"size":6111,"mtime":1611985807000,"results":"47","hashOfConfig":"26"},{"size":1372,"mtime":1611985807000,"results":"48","hashOfConfig":"26"},{"size":1090,"mtime":1611985807000,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1pxb65y",{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Users\\Dimon\\Documents\\GitHub\\React-Node.js_online-shop\\client\\src\\index.js",[],["104","105"],"C:\\Users\\Dimon\\Documents\\GitHub\\React-Node.js_online-shop\\client\\src\\App.js",["106"],"import React, {useContext, useEffect, useState} from 'react';\nimport {BrowserRouter} from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/NavBar\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"./index\";\nimport {check} from \"./http/userAPI\";\nimport {Spinner} from \"react-bootstrap\";\n\nconst App = observer(() => {\n    const {user} = useContext(Context)\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        check().then(data => {\n            user.setUser(true)\n            user.setIsAuth(true)\n        }).finally(() => setLoading(false))\n    }, [])\n\n    if (loading) {\n        return <Spinner animation={\"grow\"}/>\n    }\n\n    return (\n        <BrowserRouter>\n            <NavBar />\n            <AppRouter />\n        </BrowserRouter>\n    );\n});\n\nexport default App;\n","C:\\Users\\Dimon\\Documents\\GitHub\\React-Node.js_online-shop\\client\\src\\store\\DeviceStore.js",[],"C:\\Users\\Dimon\\Documents\\GitHub\\React-Node.js_online-shop\\client\\src\\store\\UserStore.js",[],"C:\\Users\\Dimon\\Documents\\GitHub\\React-Node.js_online-shop\\client\\src\\components\\AppRouter.js",[],"C:\\Users\\Dimon\\Documents\\GitHub\\React-Node.js_online-shop\\client\\src\\components\\NavBar.js",[],"C:\\Users\\Dimon\\Documents\\GitHub\\React-Node.js_online-shop\\client\\src\\http\\userAPI.js",[],"C:\\Users\\Dimon\\Documents\\GitHub\\React-Node.js_online-shop\\client\\src\\routes.js",[],"C:\\Users\\Dimon\\Documents\\GitHub\\React-Node.js_online-shop\\client\\src\\http\\index.js",[],"C:\\Users\\Dimon\\Documents\\GitHub\\React-Node.js_online-shop\\client\\src\\utils\\consts.js",[],"C:\\Users\\Dimon\\Documents\\GitHub\\React-Node.js_online-shop\\client\\src\\pages\\DevicePage.js",["107"],"import React, {useEffect, useState} from 'react';\nimport {Button, Card, Col, Container, Image, Row} from \"react-bootstrap\";\nimport bigStar from '../assets/bigStar.png'\nimport {useParams} from 'react-router-dom'\nimport {fetchOneDevice} from \"../http/deviceAPI\";\n\nconst DevicePage = () => {\n    const [device, setDevice] = useState({info: []})\n    const {id} = useParams()\n    useEffect(() => {\n        fetchOneDevice(id).then(data => setDevice(data))\n    }, [])\n\n    return (\n        <Container className=\"mt-3\">\n            <Row>\n                <Col md={4}>\n                    <Image width={300} height={300} src={process.env.REACT_APP_API_URL + device.img}/>\n                </Col>\n                <Col md={4}>\n                    <Row className=\"d-flex flex-column align-items-center\">\n                        <h2>{device.name}</h2>\n                        <div\n                            className=\"d-flex align-items-center justify-content-center\"\n                            style={{background: `url(${bigStar}) no-repeat center center`, width:240, height: 240, backgroundSize: 'cover', fontSize:64}}\n                        >\n                            {device.rating}\n                        </div>\n                    </Row>\n                </Col>\n                <Col md={4}>\n                    <Card\n                        className=\"d-flex flex-column align-items-center justify-content-around\"\n                        style={{width: 300, height: 300, fontSize: 32, border: '5px solid lightgray'}}\n                    >\n                        <h3>От: {device.price} руб.</h3>\n                        <Button variant={\"outline-dark\"}>Добавить в корзину</Button>\n                    </Card>\n                </Col>\n            </Row>\n            <Row className=\"d-flex flex-column m-3\">\n                <h1>Характеристики</h1>\n                {device.info.map((info, index) =>\n                    <Row key={info.id} style={{background: index % 2 === 0 ? 'lightgray' : 'transparent', padding: 10}}>\n                        {info.title}: {info.description}\n                    </Row>\n                )}\n            </Row>\n        </Container>\n    );\n};\n\nexport default DevicePage;\n","C:\\Users\\Dimon\\Documents\\GitHub\\React-Node.js_online-shop\\client\\src\\pages\\Auth.js",["108"],"import React, {useContext, useState} from 'react';\nimport {Container, Form} from \"react-bootstrap\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport {NavLink, useLocation, useHistory} from \"react-router-dom\";\nimport {LOGIN_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE} from \"../utils/consts\";\nimport {login, registration} from \"../http/userAPI\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\n\nconst Auth = observer(() => {\n    const {user} = useContext(Context)\n    const location = useLocation()\n    const history = useHistory()\n    const isLogin = location.pathname === LOGIN_ROUTE\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const click = async () => {\n        try {\n            let data;\n            if (isLogin) {\n                data = await login(email, password);\n            } else {\n                data = await registration(email, password);\n            }\n            user.setUser(user)\n            user.setIsAuth(true)\n            history.push(SHOP_ROUTE)\n        } catch (e) {\n            alert(e.response.data.message)\n        }\n\n    }\n\n    return (\n        <Container\n            className=\"d-flex justify-content-center align-items-center\"\n            style={{height: window.innerHeight - 54}}\n        >\n            <Card style={{width: 600}} className=\"p-5\">\n                <h2 className=\"m-auto\">{isLogin ? 'Авторизация' : \"Регистрация\"}</h2>\n                <Form className=\"d-flex flex-column\">\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Введите ваш email...\"\n                        value={email}\n                        onChange={e => setEmail(e.target.value)}\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Введите ваш пароль...\"\n                        value={password}\n                        onChange={e => setPassword(e.target.value)}\n                        type=\"password\"\n                    />\n                    <Row className=\"d-flex justify-content-between mt-3 pl-3 pr-3\">\n                        {isLogin ?\n                            <div>\n                                Нет аккаунта? <NavLink to={REGISTRATION_ROUTE}>Зарегистрируйся!</NavLink>\n                            </div>\n                            :\n                            <div>\n                                Есть аккаунт? <NavLink to={LOGIN_ROUTE}>Войдите!</NavLink>\n                            </div>\n                        }\n                        <Button\n                            variant={\"outline-success\"}\n                            onClick={click}\n                        >\n                            {isLogin ? 'Войти' : 'Регистрация'}\n                        </Button>\n                    </Row>\n\n                </Form>\n            </Card>\n        </Container>\n    );\n});\n\nexport default Auth;\n","C:\\Users\\Dimon\\Documents\\GitHub\\React-Node.js_online-shop\\client\\src\\pages\\Shop.js",["109"],"C:\\Users\\Dimon\\Documents\\GitHub\\React-Node.js_online-shop\\client\\src\\pages\\Basket.js",[],"C:\\Users\\Dimon\\Documents\\GitHub\\React-Node.js_online-shop\\client\\src\\pages\\Admin.js",[],"C:\\Users\\Dimon\\Documents\\GitHub\\React-Node.js_online-shop\\client\\src\\components\\Pages.js",[],"C:\\Users\\Dimon\\Documents\\GitHub\\React-Node.js_online-shop\\client\\src\\http\\deviceAPI.js",[],"C:\\Users\\Dimon\\Documents\\GitHub\\React-Node.js_online-shop\\client\\src\\components\\DeviceList.js",[],"C:\\Users\\Dimon\\Documents\\GitHub\\React-Node.js_online-shop\\client\\src\\components\\BrandBar.js",[],"C:\\Users\\Dimon\\Documents\\GitHub\\React-Node.js_online-shop\\client\\src\\components\\TypeBar.js",[],"C:\\Users\\Dimon\\Documents\\GitHub\\React-Node.js_online-shop\\client\\src\\components\\modals\\CreateType.js",[],"C:\\Users\\Dimon\\Documents\\GitHub\\React-Node.js_online-shop\\client\\src\\components\\modals\\CreateDevice.js",["110","111"],"import React, {useContext, useEffect, useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Dropdown, Form, Row, Col} from \"react-bootstrap\";\nimport {Context} from \"../../index\";\nimport {createDevice, fetchBrands, fetchDevices, fetchTypes} from \"../../http/deviceAPI\";\nimport {observer} from \"mobx-react-lite\";\n\nconst CreateDevice = observer(({show, onHide}) => {\n    const {device} = useContext(Context)\n    const [name, setName] = useState('')\n    const [price, setPrice] = useState(0)\n    const [file, setFile] = useState(null)\n    const [info, setInfo] = useState([])\n\n    useEffect(() => {\n        fetchTypes().then(data => device.setTypes(data))\n        fetchBrands().then(data => device.setBrands(data))\n    }, [])\n\n    const addInfo = () => {\n        setInfo([...info, {title: '', description: '', number: Date.now()}])\n    }\n    const removeInfo = (number) => {\n        setInfo(info.filter(i => i.number !== number))\n    }\n    const changeInfo = (key, value, number) => {\n        setInfo(info.map(i => i.number === number ? {...i, [key]: value} : i))\n    }\n\n    const selectFile = e => {\n        setFile(e.target.files[0])\n    }\n\n    const addDevice = () => {\n        const formData = new FormData()\n        formData.append('name', name)\n        formData.append('price', `${price}`)\n        formData.append('img', file)\n        formData.append('brandId', device.selectedBrand.id)\n        formData.append('typeId', device.selectedType.id)\n        formData.append('info', JSON.stringify(info))\n        createDevice(formData).then(data => onHide())\n    }\n\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить устройство\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{device.selectedType.name || \"Выберите тип\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {device.types.map(type =>\n                                <Dropdown.Item\n                                    onClick={() => device.setSelectedType(type)}\n                                    key={type.id}\n                                >\n                                    {type.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{device.selectedBrand.name || \"Выберите тип\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {device.brands.map(brand =>\n                                <Dropdown.Item\n                                    onClick={() => device.setSelectedBrand(brand)}\n                                    key={brand.id}\n                                >\n                                    {brand.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Form.Control\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                        className=\"mt-3\"\n                        placeholder=\"Введите название устройства\"\n                    />\n                    <Form.Control\n                        value={price}\n                        onChange={e => setPrice(Number(e.target.value))}\n                        className=\"mt-3\"\n                        placeholder=\"Введите стоимость устройства\"\n                        type=\"number\"\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        type=\"file\"\n                        onChange={selectFile}\n                    />\n                    <hr/>\n                    <Button\n                        variant={\"outline-dark\"}\n                        onClick={addInfo}\n                    >\n                        Добавить новое свойство\n                    </Button>\n                    {info.map(i =>\n                        <Row className=\"mt-4\" key={i.number}>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.title}\n                                    onChange={(e) => changeInfo('title', e.target.value, i.number)}\n                                    placeholder=\"Введите название свойства\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.description}\n                                    onChange={(e) => changeInfo('description', e.target.value, i.number)}\n                                    placeholder=\"Введите описание свойства\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Button\n                                    onClick={() => removeInfo(i.number)}\n                                    variant={\"outline-danger\"}\n                                >\n                                    Удалить\n                                </Button>\n                            </Col>\n                        </Row>\n                    )}\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addDevice}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n});\n\nexport default CreateDevice;\n","C:\\Users\\Dimon\\Documents\\GitHub\\React-Node.js_online-shop\\client\\src\\components\\modals\\CreateBrand.js",["112"],"import React, {useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {createBrand, createType} from \"../../http/deviceAPI\";\n\nconst CreateBrand = ({show, onHide}) => {\n    const [value, setValue] = useState('')\n\n    const addBrand = () => {\n        createBrand({name: value}).then(data => {\n            setValue('')\n            onHide()\n        })\n    }\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить тип\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Control\n                        value={value}\n                        onChange={e => setValue(e.target.value)}\n                        placeholder={\"Введите название типа\"}\n                    />\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addBrand}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default CreateBrand;\n","C:\\Users\\Dimon\\Documents\\GitHub\\React-Node.js_online-shop\\client\\src\\components\\DeviceItem.js",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":19,"column":8,"nodeType":"119","endLine":19,"endColumn":10,"suggestions":"120"},{"ruleId":"117","severity":1,"message":"121","line":12,"column":8,"nodeType":"119","endLine":12,"endColumn":10,"suggestions":"122"},{"ruleId":"123","severity":1,"message":"124","line":26,"column":17,"nodeType":"125","messageId":"126","endLine":26,"endColumn":21},{"ruleId":"117","severity":1,"message":"127","line":30,"column":8,"nodeType":"119","endLine":30,"endColumn":64,"suggestions":"128"},{"ruleId":"123","severity":1,"message":"129","line":5,"column":36,"nodeType":"125","messageId":"126","endLine":5,"endColumn":48},{"ruleId":"117","severity":1,"message":"127","line":18,"column":8,"nodeType":"119","endLine":18,"endColumn":10,"suggestions":"130"},{"ruleId":"123","severity":1,"message":"131","line":4,"column":22,"nodeType":"125","messageId":"126","endLine":4,"endColumn":32},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["134"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["135"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'device'. Either include it or remove the dependency array.",["136"],"'fetchDevices' is defined but never used.",["137"],"'createType' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},"Update the dependencies array to be: [user]",{"range":"146","text":"147"},"Update the dependencies array to be: [id]",{"range":"148","text":"149"},"Update the dependencies array to be: [device.page, device.selectedType, device.selectedBrand, device]",{"range":"150","text":"151"},"Update the dependencies array to be: [device]",{"range":"152","text":"153"},[641,643],"[user]",[457,459],"[id]",[1103,1159],"[device.page, device.selectedType, device.selectedBrand, device]",[747,749],"[device]"]